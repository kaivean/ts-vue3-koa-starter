// 该配置用于 src 和 test目录的ts
{
    "compilerOptions": {
        // ts-node does not support any module syntax other than commonjs
        // 生成代码的模块风格是commonjs 、ES6 or es2015、amd、umd、ESNext等风格
        "module": "commonjs",

        // tsc编译输出的代码的es版本
        "target": "ESNEXT", // 生成的代码是 ES3 ES5 ES6 or ES2015 ES2016 ES2017 ESNEXT

        // "sourceMap": true,
        "allowJs": true, // 不能和declaration一起使用
        "noImplicitReturns": true,
        "noImplicitAny": false,
        "strictNullChecks": true,
        "noFallthroughCasesInSwitch": true,

        "allowUnreachableCode": false,
        "allowUnusedLabels": false,

        "moduleResolution": "node",

        "allowSyntheticDefaultImports": true,
        "esModuleInterop": true,

        "lib": ["es6", "dom", "scripthost"],

        // "declaration": true, // 产出 *.d.ts，不能和allowJs一起使用
        // "declarationDir": "./dist",
        "sourceMap": true,

        "baseUrl": ".",
        "paths": {
            "@/app/*": [
                "app/*"
            ],
            "@/config/*": [
                "config/*"
            ]
        },

        "typeRoots": [
            // "./",
            "./types",
            "./node_modules/@types",
        ],

        // 输出编译后代码根目录
        "outDir": "./dist"
    },
    "compileOnSave": false,
    "include": [
        "index.ts",
        "app/**/*.ts",
        "config/**/*.ts",
        "test/**/*.ts",
        "types/**/*.ts",
        "app/**/*.js",
        "config/**/*.js",
        "test/**/*.js",
    ],
    // "exclude": [
    //     "**/*Spec.ts"
    // ]
}